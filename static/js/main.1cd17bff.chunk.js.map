{"version":3,"sources":["components/Header/Header.tsx","components/Btn/Btn.tsx","components/Inputs/InputText.tsx","components/Loader/Loader.tsx","components/Logo/Logo.tsx","components/Modal/Modal.tsx","components/Pagination/Pagination.tsx","components/PokemonCard/PokemonCard.tsx","components/PokemonCatalog/PokemonCatalog.tsx","components/PokemonItems/PokemonItems.tsx","components/PokemonMod/PokemonMod.tsx","components/Select/Select.tsx","components/Forms/LoginForm.tsx","components/Btn/BtnBack.tsx","pages/Page.tsx","pages/PageFirst.tsx","pages/NotPage.tsx","serviceWorker.ts","index.tsx"],"names":["Header","props","useHistory","className","isBack","onClick","logout","Btn","type","text","InputText","useState","val","value","setValue","useEffect","data","id","onChange","e","target","htmlFor","Loader","Logo","href","version","x","y","viewBox","d","cx","cy","r","Modal","classes","close","visibil","push","join","children","Pagination","pagination","count","Math","ceil","length","current","setCurrent","start","setStart","end","setEnd","index","clickBtn","param","prev","to","from","output","map","item","key","clickItem","PokemonCard","pokemon","setPokemon","a","fetch","response","json","Error","fn","match","params","pokemonId","then","onLoad","src","card","imageUrlHiRes","alt","name","types","subtype","attacks","damage","cost","resistances","evolvesFrom","PokemonCatalog","setParams","pokemons","setPokemons","pokemonDataMod","setPokemonDataMod","isMod","setIsMod","pokemonsItemsFrom","setPokemonsItemsFrom","pokemonsItemsTo","setPokemonsItemsTo","options","f","items","cards","c","console","log","content","PokemonMod","PokemonItems","slice","mountItems","setMountItems","supertype","imageUrl","Select","setText","textInput","setTextInput","isActive","setIsActive","btn","useRef","input","document","addEventListener","handleEvent","event","ref","clip-path","placeholder","toLowerCase","indexOf","LoiginForm","login","setLogin","pass","setPass","code","setCode","isErr","setIsErr","form","setForm","history","useLocation","state","pathname","LoginForm","alert","CodeForm","isAuth","replace","BtnBack","goBack","Page","PageFirst","title","Boolean","window","location","hostname","PrivateRoute","rest","render","localStorage","Routers","setIsAuth","path","exact","component","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"udA2BeA,EAjBkB,SAACC,GAChBC,cAEhB,OACE,4BAAQC,UAAU,UAEbF,EAAMG,OAAU,kBAAC,EAAD,MAAa,KAEhC,4BACEC,QAAS,kBAAMJ,EAAMK,UACrBH,UAAU,yBAFZ,YCESI,EAXc,SAACN,GAC5B,OACE,4BACEI,QAASJ,EAAMI,QACfG,KAAMP,EAAMO,KACZL,UAAWF,EAAME,WAChBF,EAAMQ,OCkBEC,EAvBoB,SAACT,GAAkB,IAAD,EACzBU,mBAAiBV,EAAMW,KADE,mBAC5CC,EAD4C,KACrCC,EADqC,KASnD,OANAC,qBAAU,WACJd,EAAMe,MACRf,EAAMe,KAAKH,KAEZ,CAACA,IAGF,yBAAKV,UAAS,qBAAiBU,EAAS,iBAAmB,KACzD,2BACEI,GAAIhB,EAAMgB,GACVT,KAAMP,EAAMO,KACZU,SAAU,SAACC,GAAOL,EAASK,EAAEC,OAAOP,UACtC,2BACEQ,QAASpB,EAAMgB,IACdhB,EAAMQ,QChBAa,G,MARU,WACvB,OACE,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,cCiCNoB,G,MApCQ,WACrB,OACE,uBAAGC,KAAK,IAAIrB,UAAU,QACpB,yBAAKsB,QAAQ,MACXC,EAAE,MACFC,EAAE,MACFxB,UAAU,aACVyB,QAAQ,uBACR,2BACE,0BACEC,EAAE,4KACF,0BACEA,EAAE,4kDAcF,4BACEC,GAAG,UACHC,GAAG,UACHC,EAAE,gBCaHC,G,MAnCgB,SAAChC,GAC9B,IAAMiC,EAAU,CAAC,SAEXC,EAAQ,WACZlC,EAAMkC,SAKR,OAFIlC,EAAMmC,SAASF,EAAQG,KAAK,iBAG9B,yBAAKlC,UAAW+B,EAAQI,KAAK,KAAMjC,QAAS8B,GAC1C,yBAAKhC,UAAU,eACb,4BACEE,QAAS8B,EACThC,UAAU,mBACV,yBACEA,UAAU,wBACVyB,QAAQ,qBACR,0BACEC,EAAE,iqBAUN5B,EAAMsC,aCqFDC,G,MAnHqB,SAACvC,GASnC,IARA,IAAMwC,EAA4B,GAE5BC,EAAQC,KAAKC,KAAK3C,EAAM4C,OAAO5C,EAAMyC,OAHS,EAItB/B,mBAAiB,GAJK,mBAI7CmC,EAJ6C,KAIpCC,EAJoC,OAK1BpC,mBAAiB,GALS,mBAK7CqC,EAL6C,KAKtCC,EALsC,OAM9BtC,mBAJG,GAF2B,mBAM7CuC,EAN6C,KAMxCC,EANwC,KAS5CC,EAAQJ,EAAOI,EAAQF,EAAKE,IAClCX,EAAWW,GAASA,EAGtB,IAIMC,EAAW,SAACC,GACH,QAATA,IACFP,GAAW,SAAAQ,GAAI,OAAIA,EAAO,KAEtBT,EAnBiB,EAmBYJ,GAC/BS,EAAOL,EApBY,GAqBnBG,EAASH,KAETK,EAAOT,GACPO,EAASP,EAxBU,KA4BV,QAATY,IACFP,GAAW,SAAAQ,GAAI,OAAIA,EAAO,KAEtBT,EA/BiB,EA+BY,GAC/BK,EAAOL,GACPG,EAASH,EAjCU,KAmCnBK,EAnCmB,GAoCnBF,EAAS,MAWf,OANAlC,qBAAU,WACR,IAAMyC,GAAMV,EAAU,GAAK7C,EAAMyC,MAC3Be,EAAOD,EAAKvD,EAAMyC,MACxBzC,EAAMyD,OAAOD,EAAMD,KAClB,CAACV,IAGF,yBAAK3C,UAAU,cACb,yBAAKA,UAAU,oBACb,+BAQC6C,EAAQ,EACP,4BACE7C,UAAU,kBACVE,QAAS,kBAAMgD,EAAS,UACxB,yBACElD,UAAU,wBACVyB,QAAQ,eACR,0BAAMC,EAAE,qXAMV,sCAEF,KAGFY,EAAWkB,KAAI,SAACC,GAAD,OACb,4BAEEzD,UACGyD,GAAQd,EACT,0CACA,kBACFe,IAAKD,EACLvD,QAAS,kBAzED,SAAC+C,GACjBL,EAAWK,GAwEYU,CAAUF,KACxBA,EAAO,MAKXV,EAAMR,EACL,4BACEvC,UAAU,kBACVE,QAAS,kBAAMgD,EAAS,UACxB,yBACElD,UAAU,wBACVyB,QAAQ,eACR,0BAAMC,EAAE,4XAOV,sCAEF,S,wBCgCKkC,G,MArHuB,SAAC9D,GAAmB,IAAD,cACzBU,qBADyB,mBAChDqD,EADgD,KACvCC,EADuC,iDAGvD,WAAqBX,GAArB,iBAAAY,EAAA,+EAEyBC,MAAM,sCAAD,OAAuCb,IAFrE,cAEQc,EAFR,OAGQpD,EAAOoD,EAASC,OAHxB,kBAIWrD,GAJX,sCAMU,IAAIsD,MAAJ,MANV,0DAHuD,sBAiBvD,OAJAvD,qBAAU,YAb6C,4CAcrDwD,CAAatE,EAAMuE,MAAMC,OAAOC,WAAWC,MAAK,SAAA3D,GAAUiD,EAAWjD,QACpE,IAGAgD,EACC,6BAAS7D,UAAU,gBACjB,yBAAKA,UAAU,sBACb,yBACEyE,OAAQ,iBAAM,cACdC,IAAKb,EAAQc,KAAKC,cAClBC,IAAKhB,EAAQc,KAAKG,KAClB9E,UAAU,qBACZ,yBAAKA,UAAU,qBACV6D,EAAQc,KAAKrE,KACZuD,EAAQc,KAAKrE,KAAKkD,KAAI,SAACC,EAAcR,GAAf,OACxB,uBAAGS,IAAKT,GAAQQ,EAAhB,QACE,oGAIR,yBAAKzD,UAAU,sBACb,wBACEA,UAAU,qBACT6D,EAAQc,KAAKG,MAEhB,yBAAK9E,UAAU,qBACb,mCAEK6D,EAAQc,KAAKI,MAAd,UACElB,EAAQc,KAAKI,aADf,aACE,EAAoBvB,KAAI,SAACC,EAAcR,GAAf,OACtB,0BAAMjD,UAAU,mBAAmB0D,IAAKT,GAAQQ,MAGlD,0BAAMzD,UAAU,wCAAhB,OAIN,uCAEI,UAAC6D,EAAQc,YAAT,aAAC,EAAcK,SACf,0BAAMhF,UAAU,oBAAhB,UAAoC6D,EAAQc,YAA5C,aAAoC,EAAcK,SAElD,0BAAMhF,UAAU,wCAAhB,OAGJ,6BACA,6CAEK6D,EAAQc,KAAKM,QAAd,UACEpB,EAAQc,KAAKM,eADf,aACE,EAAsBzB,KAAI,SAACC,EAAeR,GAAhB,OACxB,0BACEjD,UAAU,qBACV0D,IAAKT,GACJQ,EAAKyB,WAGV,0BAAMlF,UAAU,wCAAhB,OAGN,2CAEK6D,EAAQc,KAAKM,QAAd,UACEpB,EAAQc,KAAKM,eADf,aACE,EAAsBzB,KAAI,SAACC,EAAeR,GAAhB,OACxB,0BACEjD,UAAU,mBACV0D,IAAKT,GACJQ,EAAK0B,KAAKhD,KAAK,SAGpB,0BAAMnC,UAAU,wCAAhB,OAGN,0CAEK6D,EAAQc,KAAKS,YAAd,UACEvB,EAAQc,KAAKS,mBADf,aACE,EAA0B5B,KAAI,SAACC,EAAoBR,GAArB,OAC5B,0BACEjD,UAAU,mBACV0D,IAAKT,GACJQ,EAAKpD,KAHR,MAGiBoD,EAAK/C,UAGxB,0BAAMV,UAAU,wCAAhB,OAGN,2CAEK6D,EAAQc,KAAKU,YACV,0BACErF,UAAU,oBACT6D,EAAQc,KAAKU,aAGlB,0BAAMrF,UAAU,wCAAhB,UAMV,kBAAC,EAAD,QC7COsF,EA7FkB,WAC/B,IADqC,EAET9E,mBAAiB,IAFR,mBAE9B8D,EAF8B,KAEtBiB,EAFsB,OAGL/E,mBAAyB,MAHpB,mBAG9BgF,EAH8B,KAGpBC,EAHoB,OAIOjF,mBAAqB,MAJ5B,mBAI9BkF,EAJ8B,KAIdC,EAJc,OAKXnF,oBAAkB,GALP,mBAK9BoF,EAL8B,KAKvBC,EALuB,OAMarF,mBAAiB,GAN9B,mBAM9BsF,EAN8B,KAMXC,EANW,OAOSvF,mBANrB,GADY,mBAO9BwF,EAP8B,KAObC,EAPa,iDAwBrC,WAAqB9C,GAArB,iBAAAY,EAAA,+EAEyBC,MAAM,qCAAD,OAAsCb,IAFpE,cAEQc,EAFR,OAGQpD,EAAOoD,EAASC,OAHxB,kBAIWrD,GAJX,sCAMU,IAAIsD,MAAJ,MANV,0DAxBqC,sBA0DrC,OALAvD,qBAAU,WACR6E,EAAY,MAtDuB,2CAuDnCrB,CAAYE,GAAQE,MAAK,SAAA3D,GAAU4E,EAAY5E,QAC9C,CAACyD,IAGF,oCACE,yBAAKtE,UAAU,WACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CACEkG,QAtDM,CACd,CAACpF,GAAI,EAAGJ,MAAO,iBAAkBJ,KAAM,SACvC,CAACQ,GAAI,EAAGJ,MAAO,qBAAsBJ,KAAM,WAC3C,CAACQ,GAAI,EAAGJ,MAAO,qBAAsBJ,KAAM,WAC3C,CAACQ,GAAI,EAAGJ,MAAO,+BAAgCJ,KAAM,gBACrD,CAACQ,GAAI,EAAGJ,MAAO,mBAAoBJ,KAAM,WACzC,CAACQ,GAAI,EAAGJ,MAAO,oBAAqBJ,KAAM,YAC1C,CAACQ,GAAI,EAAGJ,MAAO,gBAAiBJ,KAAM,QACtC,CAACQ,GAAI,EAAGJ,MAAO,mBAAoBJ,KAAM,WACzC,CAACQ,GAAI,EAAGJ,MAAO,cAAeJ,KAAM,MACpC,CAACQ,GAAI,GAAIJ,MAAO,iBAAkBJ,KAAM,SACxC,CAACQ,GAAI,GAAIJ,MAAO,kBAAmBJ,KAAM,UACzC,CAACQ,GAAI,GAAIJ,MAAO,GAAIJ,KAAM,QA2ClBA,KAAK,gEACL6F,EArBA,SAAChD,GACToC,EAAUpC,OAsBN,yBAAKnD,UAAU,iBACZwF,EACC,oCACE,kBAAC,EAAD,CACEY,MAAOZ,EAASa,MAChB/C,KAAMwC,EACNzC,GAAI2C,EACJM,EAxCW,SAAC7C,GACxBoC,GAAS,GACTF,EAAkBlC,GAClB8C,QAAQC,IAAI/C,MAsCF,kBAAC,EAAD,CACElB,MA3EW,EA4EXG,OAAQ8C,EAASa,MAAM3D,OACvBa,OA9BQ,SAACD,EAAcD,GACnC0C,EAAqBzC,GACrB2C,EAAmB5C,OA8BX,kBAAC,EAAD,QAGN,kBAAC,EAAD,CACEpB,QAAS2D,EACTa,QAASC,EACT1E,MA9CW,WACf6D,GAAS,KA8CL,kBAAC,EAAD,CAAYhF,KAAM6E,OCrCXiB,G,MAtCuB,SAAC7G,GAAkB,IAAD,EAClBU,mBAAcV,EAAMsG,MAAMQ,MAAM9G,EAAMwD,KAAMxD,EAAMuD,KADhC,mBAC/CwD,EAD+C,KACnCC,EADmC,KAOtD,OAJAlG,qBAAU,WACRkG,EAAchH,EAAMsG,MAAMQ,MAAM9G,EAAMwD,KAAMxD,EAAMuD,OACjD,CAACvD,EAAMwD,OAENuD,EAEA,yBAAK7G,UAAU,iBAEX6G,EAAWrD,KAAI,SAACC,GAAD,OACb,yBACEvD,QAAS,WAAOJ,EAAMwG,EAAE7C,IACxBzD,UAAU,eACV0D,IAAKD,EAAK3C,IACR,yBACE2D,OAAQ,iBAAM,cACdzE,UAAU,mBACV0E,IAAKjB,EAAKmB,cACVC,IAAKpB,EAAKqB,OACZ,wBACE9E,UAAU,qBACTyD,EAAKqB,MAEV,yBAAK9E,UAAU,uBACXyD,EAAKuB,QAAW,0BAAMhF,UAAU,sBAAsByD,EAAKuB,SAAkB,GAC7EvB,EAAKsD,UAAa,0BAAM/G,UAAU,sBAAsByD,EAAKsD,WAAoB,SAQzF,kBAAC,EAAD,Q,OCPKL,G,MA9BqB,SAAC5G,GAAkB,IAAD,YACpD,OACE,yBAAKE,UAAU,eACb,yBAAKA,UAAU,qBACb,yBACEyE,OAAQ,iBAAM,cACdzE,UAAU,kBACV0E,IAAG,UAAE5E,EAAMe,YAAR,aAAE,EAAYmG,SACjBnC,IAAG,UAAE/E,EAAMe,YAAR,aAAE,EAAYiE,QAErB,yBAAK9E,UAAU,qBACb,wBACEA,UAAU,oBADZ,UAEGF,EAAMe,YAFT,aAEG,EAAYiE,MAEf,yBAAK9E,UAAU,qBACT,UAACF,EAAMe,YAAP,aAAC,EAAYP,MAAb,UACER,EAAMe,YADR,aACE,EAAYP,KAAKkD,KAAI,SAACC,EAAcR,GAAf,OACvB,uBAAGS,IAAKT,GAAQQ,EAAhB,QACE,mGAGR,kBAAC,IAAD,CAAMJ,GAAE,6BAAcvD,EAAMe,YAApB,aAAc,EAAYC,KAChC,kBAAC,EAAD,CAAKR,KAAK,OAAON,UAAU,sBCgFtBiH,G,MAzGiB,SAACnH,GAAkB,IAAD,EACxBU,mBAAiBV,EAAMQ,MADC,mBACzCA,EADyC,KACnC4G,EADmC,OAEd1G,mBAAiB,IAFH,mBAEzC2G,EAFyC,KAE9BC,EAF8B,OAGhB5G,oBAAkB,GAHF,mBAGzC6G,EAHyC,KAG/BC,EAH+B,KAI1CC,EAAMC,iBAAuB,MAC7Bf,EAAUe,iBAAuB,MACjCC,EAAQD,iBAAyB,MAEjCxF,EAAQ,WACZsF,GAAY,GACZF,EAAa,KAOTlE,EAAW,WACXmE,EACFrF,IAEAsF,GAAY,IAIhBI,SAASC,iBAAiB,QAAS,CACjCC,YADiC,SACrBC,GACPR,GAAYQ,EAAM5G,SAAWsG,EAAI5E,SAAWkF,EAAM5G,SAAWwG,EAAM9E,SAAWkF,EAAM5G,SAAWwF,EAAQ9D,SACxGX,OAKN,IAAMD,EAAU,CAAC,UAGjB,OAFIsF,GAAUtF,EAAQG,KAAK,eAGzB,yBAAKlC,UAAW+B,EAAQI,KAAK,MAC3B,yBACE2F,IAAKP,EACLvH,UAAU,cACVE,QAASgD,GACT,0BACEhD,QAASgD,EACTlD,UAAU,eACTM,GAEH,yBACEJ,QAASgD,EACTlD,UAAU,eACVyB,QAAQ,eACR,uBAAGsG,YAAU,eAERV,EACC,0BACE3F,EAAE,8XAQJ,0BACEA,EAAE,+XAUd,yBAAK1B,UAAU,kBAAkB8H,IAAKrB,GACtC,2BACE1F,SA/De,SAAC8G,GACpBT,EAAaS,EAAM5G,OAAOP,QA+DtBA,MAAOyG,EACPW,IAAKL,EACLpH,KAAK,OACLL,UAAU,gBACVgI,YAAY,mCACZ,yBAAKhI,UAAU,iBAEbF,EAAMoG,QAAQ1C,KAAI,SAACC,GAAD,OAC6C,GAA5DA,EAAKnD,KAAK2H,cAAcC,QAAQf,EAAUc,eAC3C,yBACEjI,UAAU,eACV0D,IAAKD,EAAK3C,GACVZ,QAAS,WACPgH,EAAQzD,EAAKnD,MACbR,EAAMqG,EAAE1C,EAAK/C,OACbsB,MAEDyB,EAAKnD,MAEN,aCRC6H,EA/FsB,SAACrI,GAAmB,IAAD,EAC5BU,qBAD4B,mBAC/C4H,EAD+C,KACxCC,EADwC,OAE9B7H,qBAF8B,mBAE/C8H,EAF+C,KAEzCC,EAFyC,OAG9B/H,qBAH8B,mBAG/CgI,EAH+C,KAGzCC,EAHyC,OAI5BjI,oBAAkB,GAJU,mBAI/CkI,EAJ+C,KAIxCC,EAJwC,OAK9BnI,mBAAiB,SALa,mBAK/CoI,EAL+C,KAKzCC,EALyC,KAOlDC,EAAU/I,eACCgJ,cACaC,OAAS,CAAE1F,KAAM,CAAE2F,SAAU,OAAnD3F,KAmCN,IAAI4F,EACF,oCACE,kBAAC,EAAD,CACEpI,GAAG,QACHR,KAAK,iCACLD,KAAK,OACLQ,KAvCW,SAACsC,GAChBkF,EAASlF,MAuCP,kBAAC,EAAD,CACErC,GAAG,OACHR,KAAK,uCACLD,KAAK,WACLQ,KAxCU,SAACsC,GACfoF,EAAQpF,MAyCHuF,EACC,uBAAG1I,UAAU,gBAAb,2IACA,KAEJ,kBAAC,EAAD,CACEE,QAvCQ,WACE,iBAAVkI,GAAqC,aAATE,EAC9BK,GAAS,IAETE,EAAQ,QACRM,MAAM,8BACNR,GAAS,KAkCP3I,UAAU,uBACVM,KAAK,UAIP8I,EACF,oCACA,kBAAC,EAAD,CACItI,GAAG,OACHR,KAAK,qBACLD,KAAK,OACLQ,KAvDU,SAACsC,GACfsF,EAAQtF,MAwDHuF,EACC,uBAAG1I,UAAU,gBAAb,uEACA,KAEJ,kBAAC,EAAD,CACEE,QAhDN,WAEe,WAATsI,EACFG,GAAS,IAET7I,EAAMuJ,SACNV,GAAS,GACTG,EAAQQ,QAAQ,OA0CdtJ,UAAU,uBACVM,KAAK,UAIX,OACE,oCACY,SAARsI,EAAmBM,EAAY,KACvB,QAARN,EAAkBQ,EAAW,OCzEtBG,G,MArBW,WACxB,IAAMT,EAAU/I,cAEhB,OACE,4BACEC,UAAU,WACVE,QAAU,WAAQ4I,EAAQU,WAC1B,yBACExJ,UAAU,iBACVyB,QAAQ,eACR,0BAAMC,EAAE,qXANZ,UCaW+H,G,MAXgB,SAAC3J,GAC9B,OACE,oCACE,kBAAC,EAAD,CACEK,OAAQL,EAAMK,OACdF,OAAQH,EAAMG,SACdH,EAAMsC,YCWCsH,G,MAlBqB,SAAC5J,GACnC,OACE,yBAAKE,UAAU,cACb,yBAAKA,UAAU,oBAEVF,EAAM6J,MACP,wBACE3J,UAAU,oBACRF,EAAM6J,OAEV,KAEA7J,EAAMsC,aCLDqH,G,MAZQ,WACrB,OACE,6BAASzJ,UAAU,YACjB,6BACE,kBAAC,EAAD,MACA,mCACA,kBAAC,EAAD,UCEY4J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1F,MACvB,2DCTN,IAAM2F,EAAe,SAAC,GAAgC,IAA9B5H,EAA6B,EAA7BA,SAAa6H,EAAgB,4BACnD,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,gBAAGJ,EAAH,EAAGA,SAAH,MACgB,SAAxBK,aAAad,OACTjH,EAEA,kBAAC,IAAD,CACEiB,GAAI,CACF4F,SAAU,SACVD,MAAO,CAAE1F,KAAMwG,WAWvBM,EAAU,WAAO,IAAD,EACQ5J,mBAAkB2J,aAAad,QADvC,mBACbA,EADa,KACLgB,EADK,KAQdlK,EAAS,WACbgK,aAAad,QAAS,EACtBgB,GAAU,IAIZ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,EAAD,CAAWX,MAAM,SACf,kBAAC,EAAD,CAAWN,OAhBE,WACrBc,aAAad,QAAS,EACtBgB,GAAU,QAiBN,kBAAC,EAAD,CAAcC,KAAK,IAAIzJ,KAAMwI,EAAQkB,OAAK,GACxC,kBAAC,EAAD,CAAMpK,OAAQA,GACZ,kBAAC,EAAD,QAGJ,kBAAC,EAAD,CACEoK,OAAK,EACL1J,KAAMwI,EACNiB,KAAK,sBACLE,UAAW,gBAAEnG,EAAF,EAAEA,MAAF,OACT,kBAAC,EAAD,CAAMlE,OAAQA,EAAQF,QAAQ,GAC5B,kBAAC,EAAD,CAAaoE,MAAOA,QAGxB,kBAAC,IAAD,CAAOiG,KAAK,KACV,kBAAC,EAAD,UAOZG,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,OAEFhD,SAASiD,eAAe,SD4DpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtG,MAAK,SAAAuG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3E,QAAQ2E,MAAMA,EAAMC,c","file":"static/js/main.1cd17bff.chunk.js","sourcesContent":["import React from 'react';\nimport { BtnBack } from '../index'\nimport './header.scss';\nimport { useHistory } from \"react-router-dom\";\n\ninterface IProps {\n  isBack?: Boolean,\n  logout: Function\n}\n\nconst Header: React.FC<IProps> = (props: IProps) => {\n  const history = useHistory();\n\n  return (\n    <header className=\"header\">\n      {\n        (props.isBack) ? <BtnBack/> : null\n      }\n      <button\n        onClick={() => props.logout()}\n        className=\"btn header-btn-logout\">\n        logout\n      </button>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\r\n\r\ninterface Props {\r\n  className?: string,\r\n  text: string,\r\n  onClick?: any,\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined\r\n}\r\n\r\nconst Btn: React.FC<Props> = (props: Props) => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      type={props.type}\r\n      className={props.className}>\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Btn;","import React, {useState, useEffect} from 'react';\r\n\r\ninterface Props {\r\n  text: string,\r\n  val?: string,\r\n  id: string,\r\n  data?: Function,\r\n  type?: string\r\n}\r\n\r\nconst InputText: React.FC<Props> = (props: Props) => {\r\n  const [value, setValue] = useState<string>(props.val!);\r\n\r\n  useEffect(() => {\r\n    if (props.data) {\r\n      props.data(value)\r\n    }\r\n  }, [value])\r\n\r\n  return (\r\n    <div className={`input-text ${(value) ? 'input-text_val' : ''}`}>\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        onChange={(e) => {setValue(e.target.value)}}/>\r\n      <label\r\n        htmlFor={props.id}>\r\n        {props.text}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\nimport './Loader.scss'\r\n\r\nconst Loader: React.FC = () => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Logo.scss';\r\n\r\nconst Logo: React.FC = () => {\r\n  return (\r\n    <a href=\"#\" className=\"logo\">\r\n      <svg version=\"1.1\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        className=\"logo__icon\"\r\n        viewBox=\"0 0 413.928 413.928\">\r\n        <g>\r\n          <path\r\n            d=\"M244.873,161.937c6.655,0,12.045,5.392,12.045,12.044c0,6.65-5.39,12.04-12.045,12.04c-6.649,0-12.044-5.389-12.044-12.04 C232.829,167.328,238.223,161.937,244.873,161.937z\"/>\r\n            <path\r\n              d=\"M371.029,339.641c-8.379-15.763-17.871-33.634-17.871-61.678c0-46.918,26.024-63.424,27.084-64.072\r\n\t\t  \t        c3.85-2.278,5.115-7.246,2.837-11.096c-2.283-3.857-7.256-5.121-11.101-2.843c-1.429,0.85-35.021,21.39-35.021,78.011\r\n\t\t  \t        c0,32.083,10.958,52.708,19.76,69.282c6.312,11.865,11.29,21.246,11.29,31.968c0,7.683-1.672,13.23-4.83,16.062\r\n\t\t  \t        c-3.217,2.879-7.42,2.452-7.499,2.452c-0.385-0.058-0.78-0.084-1.171-0.084h-29.815c3.47-5.432,5.516-11.855,5.516-18.769V13.703\r\n\t\t  \t        c0-3.636-2.426-6.827-5.933-7.805c-3.496-0.986-7.225,0.503-9.107,3.615l-39.562,65.485c-12.139-0.231-47.809-0.509-154.588-0.509\r\n\t\t  \t        c-22.673,0-33.895,0.016-39.564,0.056L45.009,4.371c-1.724-3.317-5.508-5.028-9.109-4.137c-3.631,0.886-6.184,4.137-6.184,7.868\r\n\t\t  \t        v370.762c0,19.28,15.681,34.969,34.966,34.969H188.46h106.784h58.82c0.532,0.047,1.286,0.095,2.225,0.095\r\n\t\t  \t        c3.961,0,11.085-0.881,17.36-6.297c7.003-6.054,10.558-15.614,10.558-28.429C384.208,364.452,377.811,352.397,371.029,339.641z\r\n\t\t  \t         M115.041,202.22c-15.572,0-28.242-12.667-28.242-28.239c0-15.575,12.675-28.244,28.242-28.244\r\n\t\t  \t        c15.57,0,28.242,12.669,28.242,28.244C143.283,189.553,130.616,202.22,115.041,202.22z M194.134,234.763h-5.982l-0.654,11.253\r\n\t\t  \t        c-0.248,4.304-3.818,7.631-8.079,7.631c-0.156,0-0.316-0.005-0.475-0.011c-4.464-0.264-7.878-4.097-7.612-8.554l0.599-10.314\r\n\t\t  \t        h-6.146c-4.47,0-8.101-3.623-8.101-8.1c0-4.478,3.631-8.101,8.101-8.101h28.35c4.472,0,8.1,3.623,8.1,8.101\r\n\t\t  \t        C202.234,231.145,198.606,234.763,194.134,234.763z M244.873,202.22c-15.572,0-28.244-12.667-28.244-28.239\r\n\t\t  \t        c0-15.575,12.677-28.244,28.244-28.244c15.578,0,28.255,12.669,28.255,28.244C273.127,189.553,260.451,202.22,244.873,202.22z\"/>\r\n              <circle\r\n                cx=\"115.041\"\r\n                cy=\"173.978\"\r\n                r=\"12.042\"/>\r\n        </g>\r\n      </svg>\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Modal.scss'\r\n\r\ntype Props = {\r\n  content?: any,\r\n  visibil: Boolean,\r\n  close: Function,\r\n  children?: JSX.Element[] | JSX.Element | null\r\n}\r\n\r\nconst Modal: React.FC<Props> = (props: Props) => {\r\n  const classes = ['modal'];\r\n\r\n  const close = () => {\r\n    props.close()\r\n  }\r\n\r\n  if (props.visibil) classes.push('modal_visibil')\r\n\r\n  return (\r\n    <div className={classes.join(' ')} onClick={close}>\r\n      <div className=\"modal-block\">\r\n        <button\r\n          onClick={close}\r\n          className=\"modal-btn-close\">\r\n          <svg\r\n            className=\"modal-btn-close__icon\"\r\n            viewBox=\"0 0 329.26933 329\">\r\n            <path\r\n              d=\"m194.800781 164.769531 128.210938-128.214843c8.34375-8.339844\r\n              8.34375-21.824219 0-30.164063-8.339844-8.339844-21.824219-8.339844-30.164063\r\n              0l-128.214844 128.214844-128.210937-128.214844c-8.34375-8.339844-21.824219-8.339844-30.164063\r\n              0-8.34375 8.339844-8.34375 21.824219 0 30.164063l128.210938 128.214843-128.210938\r\n              128.214844c-8.34375 8.339844-8.34375 21.824219 0 30.164063 4.15625 4.160156 9.621094\r\n              6.25 15.082032 6.25 5.460937 0 10.921875-2.089844 15.082031-6.25l128.210937-128.214844\r\n              128.214844 128.214844c4.160156 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0\r\n              10.921874-2.089844 15.082031-6.25 8.34375-8.339844 8.34375-21.824219 0-30.164063zm0 0\"/>\r\n          </svg>\r\n        </button>\r\n        { props.children }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, {useState, useEffect, useRef} from 'react';\r\nimport './Pagination.scss'\r\n\r\ninterface Props {\r\n  output: Function,\r\n  count: number, // сколько карточек показывать\r\n  length: number // динна карточек\r\n}\r\n\r\nconst Pagination: React.FC<Props> = (props: Props) => {\r\n  const pagination: Array<number> = []; // массив с кнопками пагинации\r\n  const paginationLength = 8; // сколько кнопок показывать\r\n  const count = Math.ceil(props.length/props.count); // сколько всего кнопок\r\n  const [current, setCurrent] = useState<number>(0); // индекс активной кнопки\r\n  const [start, setStart] = useState<number>(0); // индекс начала интервала\r\n  const [end, setEnd] = useState<number>(paginationLength); // индекс конца интервала\r\n  //const _current = useRef<HTMLSpanElement>(null);\r\n\r\n  for(let index = start; index < end; index++) {\r\n    pagination[index] = index;\r\n  }\r\n\r\n  const clickItem = (index: number) => {\r\n    setCurrent(index)\r\n  }\r\n\r\n  const clickBtn = (param: string) => {\r\n    if (param == 'next') {\r\n      setCurrent(prev => prev + 1);\r\n\r\n      if (current + paginationLength < count) {\r\n        setEnd(current + paginationLength)\r\n        setStart(current)\r\n      } else {\r\n        setEnd(count)\r\n        setStart(count - paginationLength)\r\n      }\r\n\r\n    }\r\n    if (param == 'prev') {\r\n      setCurrent(prev => prev - 1);\r\n\r\n      if (current - paginationLength > 0) {\r\n        setEnd(current)\r\n        setStart(current - paginationLength)\r\n      } else {\r\n        setEnd(paginationLength)\r\n        setStart(0)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const to = (current + 1) * props.count;\r\n    const from = to - props.count\r\n    props.output(from, to)\r\n  }, [current])\r\n\r\n  return(\r\n    <div className=\"pagination\">\r\n      <div className=\"pagination-wrapp\">\r\n        <span\r\n          //className=\"pagination-current\"\r\n          //ref={_current}\r\n          >\r\n          { //current + 1\r\n          }\r\n        </span>\r\n        {\r\n        (start > 0) ?\r\n          <button\r\n            className=\"pagination-next\"\r\n            onClick={() => clickBtn('prev')}>\r\n            <svg\r\n              className=\"pagination-prev__icon\"\r\n              viewBox=\"0 0 258 452\">\r\n              <path d=\"M0.141052 225.923C0.141052 217.825 3.23305 209.728 9.40405 203.554L203.69\r\n              9.27C216.049 -3.089 236.087 -3.089 248.441 9.27C260.795 21.624 260.795 41.658 248.441\r\n              54.018L76.526 225.923L248.435 397.829C260.789 410.188 260.789 430.22 248.435\r\n              442.573C236.081 454.938 216.043 454.938 203.684 442.573L9.39804 248.292C3.22604\r\n              242.115 0.141052 234.018 0.141052 225.923Z\"/>\r\n            </svg>\r\n            <span>...</span>\r\n          </button> :\r\n          null\r\n      }\r\n      {\r\n        pagination.map((item: number) =>\r\n          <button\r\n            //ref={`current-${item}`}\r\n            className={\r\n              (item == current) ?\r\n              'pagination-item pagination-item_current' :\r\n              'pagination-item'}\r\n            key={item}\r\n            onClick={() => clickItem(item)}>\r\n            {item + 1}\r\n          </button>\r\n        )\r\n      }\r\n      {\r\n        (end < count) ?\r\n          <button\r\n            className=\"pagination-next\"\r\n            onClick={() => clickBtn('next')}>\r\n            <svg\r\n              className=\"pagination-next__icon\"\r\n              viewBox=\"0 0 258 452\">\r\n              <path d=\"M257.706 225.924C257.706 234.022 254.614 242.119\r\n              248.443 248.293L54.1571 442.577C41.7981 454.936 21.7601 454.936\r\n              9.40613 442.577C-2.94788 430.223 -2.94788 410.189 9.40613\r\n              397.829L181.321 225.924L9.41213 54.018C-2.94187 41.659 -2.94187\r\n              21.627 9.41213 9.274C21.7661 -3.091 41.8041 -3.091 54.1631 9.274L248.449\r\n              203.555C254.621 209.732 257.706 217.829 257.706 225.924Z\"/>\r\n            </svg>\r\n            <span>...</span>\r\n          </button> :\r\n          null\r\n      }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport './PokemonCard.scss'\r\nimport { Loader } from '../index'\r\n\r\ninterface IProps {\r\n  match?: any\r\n}\r\n\r\ninterface IPokemon {\r\n  card: IPokemonCard\r\n}\r\n\r\ninterface IDamage {\r\n  damage: string,\r\n  cost: Array<string>\r\n}\r\n\r\ninterface IResistances {\r\n  type: string,\r\n  value: Array<string>\r\n}\r\ninterface IPokemonCard {\r\n  name: string,\r\n  imageUrlHiRes?: string,\r\n  types?: Array<string>,\r\n  subtype: string,\r\n  text: Array<string>,\r\n  attacks?: Array<IDamage>,\r\n  resistances?: Array<IResistances>,\r\n  evolvesFrom?: string\r\n}\r\n\r\nconst PokemonCard: React.FC<IProps> = (props: IProps) => {\r\n  const [pokemon, setPokemon] = useState<IPokemon>()\r\n\r\n  async function fn<T>(param: string): Promise<T> {\r\n    try {\r\n      let response = await fetch(`https://api.pokemontcg.io/v1/cards/${param}`);\r\n      let data = response.json();\r\n      return data;\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fn<IPokemon>(props.match.params.pokemonId).then(data => { setPokemon(data)})\r\n  }, []);\r\n\r\n  return (\r\n    (pokemon) ?\r\n      <section className=\"pokemon-card\">\r\n        <div className=\"pokemon-card-col-l\">\r\n          <img\r\n            onLoad={() => \"../cat.png\"}\r\n            src={pokemon.card.imageUrlHiRes}\r\n            alt={pokemon.card.name}\r\n            className=\"pokemon-card-img\"/>\r\n          <div className=\"pokemon-card-text\">\r\n            { (pokemon.card.text) ?\r\n                pokemon.card.text.map((item: string, index: number) =>\r\n              <p key={index}>{item} </p>\r\n            ) : <p>нет описания</p>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"pokemon-card-col-r\">\r\n          <h3\r\n            className=\"pokemon-card-name\">\r\n            {pokemon.card.name}\r\n          </h3>\r\n          <div className=\"pokemon-card-info\">\r\n            <p>Type:\r\n              {\r\n                (pokemon.card.types) ?\r\n                  pokemon.card.types?.map((item: string, index: number) =>\r\n                    <span className=\"pokemon-card-sub\" key={index}>{item}</span>\r\n                  )\r\n                  :\r\n                  <span className=\"pokemon-card-sub pokemon-card-sub_no\">no</span>\r\n\r\n              }\r\n            </p>\r\n            <p>Subtype:\r\n              {\r\n                (pokemon.card?.subtype) ?\r\n                <span className=\"pokemon-card-sub\">{pokemon.card?.subtype}</span>\r\n                :\r\n                <span className=\"pokemon-card-sub pokemon-card-sub_no\">no</span>\r\n              }\r\n            </p>\r\n            <hr/>\r\n            <p>Attacks damage:\r\n              {\r\n                (pokemon.card.attacks) ?\r\n                  pokemon.card.attacks?.map((item: IDamage, index: number) =>\r\n                    <span\r\n                      className=\"pokemon-card-label\"\r\n                      key={index}>\r\n                      {item.damage}\r\n                    </span>\r\n                  ) :\r\n                  <span className=\"pokemon-card-sub pokemon-card-sub_no\">no</span>\r\n              }\r\n            </p>\r\n            <p>Attacks cost:\r\n              {\r\n                (pokemon.card.attacks) ?\r\n                  pokemon.card.attacks?.map((item: IDamage, index: number) =>\r\n                    <span\r\n                      className=\"pokemon-card-sub\"\r\n                      key={index}>\r\n                      {item.cost.join(' ')}\r\n                    </span>\r\n                  ) :\r\n                  <span className=\"pokemon-card-sub pokemon-card-sub_no\">no</span>\r\n              }\r\n            </p>\r\n            <p>Resistances:\r\n              {\r\n                (pokemon.card.resistances) ?\r\n                  pokemon.card.resistances?.map((item: IResistances, index: number) =>\r\n                    <span\r\n                      className=\"pokemon-card-sub\"\r\n                      key={index}>\r\n                      {item.type} / {item.value}\r\n                    </span>\r\n                  ) :\r\n                  <span className=\"pokemon-card-sub pokemon-card-sub_no\">no</span>\r\n              }\r\n            </p>\r\n            <p>Evolves from:\r\n              {\r\n                (pokemon.card.evolvesFrom) ?\r\n                    <span\r\n                      className=\"pokemon-card-sub\">\r\n                      {pokemon.card.evolvesFrom}\r\n                    </span>\r\n                  :\r\n                  <span className=\"pokemon-card-sub pokemon-card-sub_no\">no</span>\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      : <Loader />\r\n  )\r\n}\r\n\r\nexport default PokemonCard;","import React, { useState, useEffect } from 'react';\r\nimport { Select, PokemonItems, Pagination, Loader, Modal, PokemonMod } from '../index';\r\n\r\ninterface Pokemon {\r\n  cards: Array<any>\r\n}\r\n\r\nconst PokemonCatalog: React.FC = () => {\r\n  const pokemonsItemsNum = 4;\r\n  const [params, setParams] = useState<string>('');\r\n  const [pokemons, setPokemons] = useState<Pokemon | null>(null);\r\n  const [pokemonDataMod, setPokemonDataMod] = useState<any | null>(null);\r\n  const [isMod, setIsMod] = useState<Boolean>(false)\r\n  const [pokemonsItemsFrom, setPokemonsItemsFrom] = useState<number>(0)\r\n  const [pokemonsItemsTo, setPokemonsItemsTo] = useState<number>(pokemonsItemsNum)\r\n\r\n  const options = [\r\n    {id: 1, value: '?subtype=Basic', text: 'Basic'},\r\n    {id: 2, value: '?subtype=Stage%201', text: 'Stage 1'},\r\n    {id: 3, value: '?subtype=Stage%202', text: 'Stage 2'},\r\n    {id: 4, value: '?subtype=Pok%C3%A9mon%20Tool', text: 'Pokemon Tool'},\r\n    {id: 5, value: '?subtype=Special', text: 'Special'},\r\n    {id: 6, value: '?subtype=Restored', text: 'Restored'},\r\n    {id: 7, value: '?subtype=Item', text: 'Item'},\r\n    {id: 8, value: '?subtype=Stadium', text: 'Stadium'},\r\n    {id: 9, value: '?subtype=GX', text: 'GX'},\r\n    {id: 10, value: '?subtype=Break', text: 'Break'},\r\n    {id: 11, value: '?subtype=Legend', text: 'Legend'},\r\n    {id: 12, value: '', text: 'All'}\r\n  ]\r\n\r\n  async function fn<T>(param: string): Promise<T> {\r\n    try {\r\n      let response = await fetch(`https://api.pokemontcg.io/v1/cards${param}`);\r\n      let data = response.json();\r\n      return data;\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  }\r\n\r\n  const clickHendlerItem = (item: any) => {\r\n    setIsMod(true)\r\n    setPokemonDataMod(item)\r\n    console.log(item)\r\n  }\r\n\r\n  const closeMod = () => {\r\n    setIsMod(false)\r\n  }\r\n\r\n  const f = (param: string) => {\r\n    setParams(param);\r\n  }\r\n\r\n  const pokemonsItems = (from: number, to: number) => {\r\n    setPokemonsItemsFrom(from);\r\n    setPokemonsItemsTo(to);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPokemons(null);\r\n    fn<Pokemon>(params).then(data => { setPokemons(data)})\r\n  }, [params]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <div className=\"content-bar\">\r\n          <Select\r\n            options={options}\r\n            text=\"Выбрать тип\"\r\n            f={f}/>\r\n        </div>\r\n        <div className=\"content-wrapp\">\r\n          {pokemons ?\r\n            <>\r\n              <PokemonItems\r\n                items={pokemons.cards}\r\n                from={pokemonsItemsFrom}\r\n                to={pokemonsItemsTo}\r\n                c={clickHendlerItem}/>\r\n              <Pagination\r\n                count={pokemonsItemsNum}\r\n                length={pokemons.cards.length}\r\n                output={pokemonsItems}/>\r\n            </>:\r\n            <Loader />}\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        visibil={isMod}\r\n        content={PokemonMod}\r\n        close={closeMod}>\r\n        <PokemonMod data={pokemonDataMod}/>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PokemonCatalog;","import React, {useState, useEffect} from 'react';\r\nimport './PokemonItems.scss'\r\nimport { Loader } from '../index'\r\n\r\ntype Props = {\r\n  items: Array<any>,\r\n  from: number,\r\n  to: number,\r\n  c: Function\r\n}\r\n\r\ninterface IItem {\r\n  id: string,\r\n  imageUrlHiRes: string,\r\n  name: string,\r\n  subtype?: string,\r\n  supertype: string\r\n}\r\n\r\nconst PokemonItems: React.FC<Props> = (props: Props) => {\r\n  const [mountItems, setMountItems] = useState<any>(props.items.slice(props.from, props.to));\r\n\r\n  useEffect(() => {\r\n    setMountItems(props.items.slice(props.from, props.to))\r\n  }, [props.from]);\r\n\r\n  if (mountItems) {\r\n    return (\r\n      <div className=\"pokemon-items\">\r\n        {\r\n          mountItems.map((item: IItem) =>\r\n            <div\r\n              onClick={() => {props.c(item)}}\r\n              className=\"pokemon-item\"\r\n              key={item.id}>\r\n                <img\r\n                  onLoad={() => \"../cat.png\"}\r\n                  className=\"pokemon-item-img\"\r\n                  src={item.imageUrlHiRes}\r\n                  alt={item.name}/>\r\n                <h4\r\n                  className=\"pokemon-item-name\">\r\n                  {item.name}\r\n                </h4>\r\n              <div className=\"pokemon-item-labels\">\r\n                {(item.subtype) ? <span className=\"pokemon-item-label\">{item.subtype}</span> : ''}\r\n                {(item.supertype) ? <span className=\"pokemon-item-label\">{item.supertype}</span> : ''}\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  return (<Loader />)\r\n}\r\n\r\nexport default PokemonItems;\r\n","import React from 'react';\r\nimport { Btn } from '../index'\r\nimport { Link } from 'react-router-dom';\r\nimport './PokemonMod.scss'\r\n\r\ninterface Props {\r\n  data: IPokemon | null\r\n}\r\n\r\ninterface IPokemon {\r\n  imageUrl: string,\r\n  name: string,\r\n  id: string,\r\n  text: Array<string>\r\n}\r\n\r\n\r\nconst PokemonMod: React.FC<Props> = (props: Props) => {\r\n  return (\r\n    <div className=\"pokemon-mod\">\r\n      <div className=\"pokemon-mod-col-l\">\r\n        <img\r\n          onLoad={() => \"../cat.png\"}\r\n          className=\"pokemon-mod-img\"\r\n          src={props.data?.imageUrl}\r\n          alt={props.data?.name}/>\r\n      </div>\r\n      <div className=\"pokemon-mod-col-r\">\r\n        <h4\r\n          className=\"pokemon-mod-name\">\r\n          {props.data?.name}\r\n        </h4>\r\n        <div className=\"pokemon-mod-text\">\r\n            { (props.data?.text) ?\r\n                props.data?.text.map((item: string, index: number) =>\r\n              <p key={index}>{item} </p>\r\n            ) : <p>нет описания</p>\r\n            }\r\n          </div>\r\n        <Link to={`/pokemon/${props.data?.id}`}>\r\n          <Btn text=\"More\" className=\"btn btn-grad\"/>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PokemonMod;\r\n\r\n","import React, { useState, useRef } from 'react';\r\nimport './Select.scss';\r\n\r\ninterface Options {\r\n  id: number,\r\n  value: string,\r\n  text: string\r\n}\r\n\r\ninterface Props {\r\n  options: Array<Options>,\r\n  text: string,\r\n  f: Function\r\n}\r\n\r\nconst Select: React.FC<Props> = (props: Props) => {\r\n  const [text, setText] = useState<string>(props.text);\r\n  const [textInput, setTextInput] = useState<string>('');\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n  const btn = useRef<HTMLDivElement>(null);\r\n  const content = useRef<HTMLDivElement>(null);\r\n  const input = useRef<HTMLInputElement>(null);\r\n\r\n  const close = () => {\r\n    setIsActive(false);\r\n    setTextInput('')\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setTextInput(event.target.value)\r\n  }\r\n\r\n  const clickBtn = () => {\r\n    if (isActive) {\r\n      close()\r\n    } else {\r\n      setIsActive(true)\r\n    }\r\n  }\r\n\r\n  document.addEventListener('click', {\r\n    handleEvent(event) {\r\n      if(isActive && event.target !== btn.current && event.target !== input.current && event.target !== content.current) {\r\n        close()\r\n      }\r\n    }\r\n  })\r\n  \r\n  const classes = ['select'];\r\n  if (isActive) classes.push('select_open')\r\n\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <div\r\n        ref={btn}\r\n        className=\"select__btn\"\r\n        onClick={clickBtn}>\r\n        <span\r\n          onClick={clickBtn}\r\n          className=\"select__val\">\r\n          {text}\r\n        </span>\r\n        <svg\r\n          onClick={clickBtn}\r\n          className=\"select__icon\"\r\n          viewBox=\"0 0 452 452\">\r\n          <g clip-path=\"url(#clip0)\">\r\n            {\r\n              (isActive) ?\r\n                <path\r\n                  d=\"M225.924 97.141C234.022 97.141 242.119 100.233\r\n                  248.293 106.404L442.577 300.69C454.936 313.049 454.936\r\n                  333.087 442.577 345.441C430.223 357.795 410.189 357.795\r\n                  397.829 345.441L225.924 173.526L54.0179 345.435C41.6589\r\n                  357.789 21.627 357.789 9.27396 345.435C-3.09104 333.081\r\n                  -3.09104 313.043 9.27396 300.684L203.555 106.398C209.732\r\n                  100.226 217.829 97.141 225.924 97.141Z\" />\r\n              :\r\n                <path\r\n                  d=\"M225.923 354.706C217.825 354.706 209.728 351.614 203.554\r\n                  345.443L9.27023 151.157C-3.08877 138.798 -3.08877 118.76 9.27023\r\n                  106.406C21.6242 94.052 41.6582 94.052 54.0182 106.406L225.923\r\n                  278.321L397.829 106.412C410.188 94.058 430.22 94.058 442.573\r\n                  106.412C454.938 118.766 454.938 138.804 442.573 151.163L248.292\r\n                  345.449C242.115 351.621 234.018 354.706 225.923 354.706Z\" />\r\n            }\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      <div className=\"select__content\" ref={content}>\r\n      <input\r\n        onChange={handleChange}\r\n        value={textInput}\r\n        ref={input}\r\n        type=\"text\"\r\n        className=\"select__input\"\r\n        placeholder=\"Поиск\"/>\r\n        <div className=\"select__items\">\r\n        {\r\n          props.options.map((item: any) =>\r\n            (item.text.toLowerCase().indexOf(textInput.toLowerCase()) == 0) ?\r\n            <div\r\n              className=\"select__item\"\r\n              key={item.id}\r\n              onClick={() => {\r\n                setText(item.text);\r\n                props.f(item.value);\r\n                close()\r\n              }}>\r\n              {item.text}\r\n            </div>\r\n            : null\r\n          )\r\n        }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select;","import React, {useState} from 'react';\r\nimport { InputText, Btn } from '../index'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  isAuth: Function\r\n}\r\n\r\nconst LoiginForm: React.FC<IProps> = (props: IProps) => {\r\n  const [login, setLogin] = useState<string>();\r\n  const [pass, setPass] = useState<string>();\r\n  const [code, setCode] = useState<string>();\r\n  const [isErr, setIsErr] = useState<boolean>(false);\r\n  const [form, setForm] = useState<string>('login');\r\n\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  let { from }:any = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const SetLogin = (param: string) => {\r\n    setLogin(param)\r\n  }\r\n\r\n  const SetPass = (param: string) => {\r\n    setPass(param)\r\n  }\r\n\r\n  const SetCode = (param: string) => {\r\n    setCode(param)\r\n  }\r\n\r\n  const Login = () => {\r\n    if (login !== 'kode@kode.ru' && pass !== 'Enk0deng') {\r\n      setIsErr(true)\r\n    } else {\r\n      setForm('code')\r\n      alert('Код: 529384')\r\n      setIsErr(false)\r\n    }\r\n  }\r\n\r\n  function Code() {\r\n\r\n    if (code !== '529384') {\r\n      setIsErr(true)\r\n    } else {\r\n      props.isAuth();\r\n      setIsErr(false)\r\n      history.replace('/');\r\n    }\r\n  }\r\n\r\n  let LoginForm = (\r\n    <>\r\n      <InputText\r\n        id=\"login\"\r\n        text=\"Логин\"\r\n        type=\"text\"\r\n        data={SetLogin}/>\r\n      <InputText\r\n        id=\"pass\"\r\n        text=\"Пароль\"\r\n        type=\"password\"\r\n        data={SetPass}/>\r\n      {\r\n        (isErr) ?\r\n          <p className=\"form-invalid\">Неверный логин или пароль</p> :\r\n          null\r\n      }\r\n      <Btn\r\n        onClick={Login}\r\n        className=\"btn btn-grad app-btn\"\r\n        text=\"next\"/>\r\n    </>\r\n  )\r\n\r\n  let CodeForm = (\r\n    <>\r\n    <InputText\r\n        id=\"code\"\r\n        text=\"Код\"\r\n        type=\"code\"\r\n        data={SetCode}/>\r\n      {\r\n        (isErr) ?\r\n          <p className=\"form-invalid\">Неверный код</p> :\r\n          null\r\n      }\r\n      <Btn\r\n        onClick={Code}\r\n        className=\"btn btn-grad app-btn\"\r\n        text=\"next\"/>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {(form == 'login') ? LoginForm : null}\r\n      {(form == 'code') ? CodeForm : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoiginForm;","import React from 'react';\r\nimport './Btn.scss';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst BtnBack: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <button\r\n      className=\"btn-back\"\r\n      onClick={ () => { history.goBack() } }>\r\n      <svg\r\n        className=\"btn-back__icon\"\r\n        viewBox=\"0 0 258 452\">\r\n        <path d=\"M0.141052 225.923C0.141052 217.825 3.23305 209.728 9.40405 203.554L203.69\r\n        9.27C216.049 -3.089 236.087 -3.089 248.441 9.27C260.795 21.624 260.795 41.658 248.441\r\n        54.018L76.526 225.923L248.435 397.829C260.789 410.188 260.789 430.22 248.435\r\n        442.573C236.081 454.938 216.043 454.938 203.684 442.573L9.39804 248.292C3.22604\r\n        242.115 0.141052 234.018 0.141052 225.923Z\"/>\r\n      </svg>\r\n      Back\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default BtnBack;\r\n","import React from 'react';\r\nimport {Header} from '../components/index'\r\nimport '../scss/index.scss'\r\n\r\ninterface IProps {\r\n  isBack?: Boolean,\r\n  logout: Function,\r\n  children?: JSX.Element[] | JSX.Element | null\r\n}\r\n\r\nconst Page: React.FC<IProps> = (props: IProps) => {\r\n  return (\r\n    <>\r\n      <Header\r\n        logout={props.logout}\r\n        isBack={props.isBack}/>\r\n      { props.children }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport './PageFirst.scss'\r\nimport '../scss/index.scss'\r\n\r\ninterface IProps {\r\n  title?: string,\r\n  children?: JSX.Element[] | JSX.Element | null\r\n}\r\n\r\nconst PageFirst: React.FC<IProps> = (props: IProps) => {\r\n  return (\r\n    <div className=\"page-first\">\r\n      <div className=\"page-first-wrapp\">\r\n        {\r\n          (props.title) ?\r\n          <h4\r\n            className=\"page-first-title\">\r\n            { props.title }\r\n          </h4> :\r\n          null\r\n        }\r\n        { props.children }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageFirst;","import React from 'react';\r\nimport {BtnBack, Logo} from '../components/index'\r\nimport './NotPage.scss'\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <section className=\"not-page\">\r\n      <div>\r\n        <Logo/>\r\n        <h1>404</h1>\r\n        <BtnBack/>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Page;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { PageFirst, Page, NotPage } from './pages/index'\nimport { PokemonCard, LoginForm, PokemonCatalog } from './components/index'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Redirect, Switch, useHistory, useLocation } from 'react-router-dom';\n\n//localStorage.clear()\n\nconst PrivateRoute = ({ children, ...rest }: any) => {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n      localStorage.isAuth === 'true' ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\n\nconst Routers = () => {\n  const [isAuth, setIsAuth] = useState<Boolean>(localStorage.isAuth);\n\n  const authentication = () => {\n    localStorage.isAuth = true;\n    setIsAuth(true);\n  }\n\n  const logout = () => {\n    localStorage.isAuth = false;\n    setIsAuth(false);\n    //console.log(isAuth)\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <PageFirst title=\"Login\">\n            <LoginForm isAuth={authentication}/>\n          </PageFirst>\n        </Route>\n        <PrivateRoute path=\"/\" data={isAuth} exact>\n          <Page logout={logout}>\n            <PokemonCatalog/>\n          </Page>\n        </PrivateRoute>\n        <PrivateRoute\n          exact\n          data={isAuth}\n          path=\"/pokemon/:pokemonId\"\n          component={({match}: any) => (\n            <Page logout={logout} isBack={true}>\n              <PokemonCard match={match}/>\n            </Page>\n          )}/>\n          <Route path=\"*\">\n            <NotPage/>\n          </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routers/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}